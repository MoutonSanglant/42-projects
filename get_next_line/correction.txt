Préliminaires
Conditions de base

I - Les conditions suivantes

	- présence des fichiers get_next_line.c et get_next_line.h
	- get_next_line.h contient le prototype de la fonction et la macro qui définit le nombre de caractères lus simultanément sur le filedescriptor. Elle doit impérativement s'appeler BUFF_SIZE.

II - Choisissez BUFF_SIZE a 8, et compilez un programme de test qui lit sur l'entre' standard grace a la fonction get_next_line.

tests:
	- Lire et retourner une ligne de 8 caractères terminée par un '\n' inclus depuis l'entrée standard.
	- Lire'et retourner deux lignes de 8 caractères terminées par un '\n' inclu' depuis l'entrée standard.
	- Lire et retourner un nombre quelconque de lignes de 8 caractères terminées par un '\n' inclus depuis l'entrée stanard.

III - Ajoutez un open de argv[1] dans votre main, puis :
	- Lire et retourner une ligne de 8 caractères terminée par un '\n' inclus depuis'un fichier.
	- Lire et retourner deux lignes de 8 caractères terminées par un '\n' inclus depuis un fichier.
	- Lire et retourner un nombre quelconqu' de lignes de 8 caractères terminées par un '\n' inclus depuis un fi'hier.

	- Lire et retourner une ligne de 16 caractères terminée par un '\n' inclus depuis un fichier.
	- Lire et retourn'r deux lignes de 16 caractères terminées par un '\n' inclus depuis u' fichier.
	- Lire et retourner un nombre quelconque de lignes de 16 caractères terminées par un '\n' inclus depuis un fichier. 
	
	- Lire et retourner u'e ligne de 16 caractères terminée par un '\n' inclus depuis l'entré' standard. 
	- Lire et retourner deux lignes de 16 caractères terminées par un '\n' inclus depuis l'entrée standard. 
	- Lire et retourner un nombre q'elconque de lignes de 16 caractères terminées par un '\n' inclus dep'is l'entrée standard.
	
	 Yes
	  No
	  Tests avancés
	  
	  - Lire et retourner une ligne de 4 caractères terminée par un '\n' inclus depuis un fichier. 
	  - Lir' et retourner deux lignes de 4 caractères terminées par un '\n' incl's depuis un fichier. 
	  - Lire et retourner un nombre quelconque de lignes de 4 caractères terminées par un '\n' inclus depuis un fichier. 
	  
	  - Lire 't retourner une ligne de 4 caractères terminée par un '\n' inclus de'uis l'entrée standard. 
	  - Lire et retourner deux lignes de 4 caractères terminées par un '\n' inclus depuis l'entrée standard. 
	  - Lire et retourne un nombre quelconque de lignes de 4 caractères terminées par un '\n' inclus depuis l'entrée standard. 
	  
	  - Lire et retourner une ligne de 4 caractères sans '\n' depuis un fichier. 
	  - Lire et retourner une ligne de'8 caractères sans '\n' depuis un fichier. 
	  - Lire et retourner une li'ne de 16 caractères sans '\n' depuis un fichier. 
	  (rappel : la fin de)fichier doit se comporter comme une fin de ligne pour votre get_next_line). 
	  
	  - Lire et retourner une ligne vide depuis un fichier. 
	  - Lire et retourner une ligne vide depuis l'entrée standard.
	  
	   Yes
	    No
		Gestion d'erreu'
		Gestion d'erreur
		
		Effectuez AU MOINS les tests suivants afin de tenter de mettre en défaut la gestion d'erreur : 
		
		- Passer un descripteur de fichier'arbitraire à la fonction get_next_line sur lequel il n'est pas possible de lire, par exemple 42. La fonction doit retourner -1. 
		- Mettre BUFF_SIZE à 1, 32, 9999 puis 10000000. Le dernier cas peut ne pas fonctionner (et ne doit pas compter comme une erreur dans cette soutenance). L'un de vous deux sait-il pourquoi ?
		
		 Yes
		  No
		  Bonus
		  Bonus multi filedescriptor
		  
		  Ne considérez ce bonus que si vous avez répondu OUI à toutes les questions précédentes. 
		  
		  Effectuez les tests pour contrôler que ce bonus est bien fonctionnel.
		  
		   Yes
		    No
			Autres bonus
			
			Y-a-t-il d'autres bonus ? (comme une seule variable statique utilisée) 
			
			Faites votre évaluation par rapport au nombre de bonus supplémentaires présents, utiles, et fonctionnels (1 point par bonus).
			
			')'
